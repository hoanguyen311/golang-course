/*********************
EVEN FIBONACCI NUMBERS
**********************/

/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
*/
package main

import "fmt"

func main() {
	sum := findSum(4000000)

	fmt.Println(sum)
}

func fibonacci(term int) int {
	if (term < 2) {
		return 1
	}
	return  fibonacci(term - 2) + fibonacci(term - 1)
}

func findSum(maxValue int) int {
	sum := 0
	counter := 0

	for valueOfTerm := fibonacci(counter);
			valueOfTerm < maxValue;
		counter, valueOfTerm = counter + 1, fibonacci(counter) {
		if valueOfTerm % 2 == 0 {
			sum += valueOfTerm
		}
	}

	return sum
}