package main

import "fmt"

func main() {

	nums := generateFibonacci(4000000)
	fmt.Println(nums)
	sum := sumOfEven(nums...)
	fmt.Println(sum)
}

func generateFibonacci(max int) []int {
	var fNums []int
	n1 := 1
	n2 := 2
	fNums = append(fNums, n1)
	fNums = append(fNums, n2)
	for n1 + n2 < max {
		fNums = append(fNums, n1 + n2)
		temp := n1
		n1 = n2
		n2 = n2 + temp
	}

	return fNums
}

func sumOfEven(nums ...int) int {
	sum := 0

	for _, v := range nums {
		if v % 2 == 0 {
			sum += v
		}
	}

	return sum
}
/*********************

EVEN FIBONACCI NUMBERS

**********************/

/*

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.

 */